{"version":3,"sources":["components/Header.js","components/Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["AppName","styled","div","Header","SearchBox","SearchIcon","img","HeaderComponent","RecipeImage","SearchInput","input","RecipeContainer","CoverImage","RecipeName","span","SeeMoreText","IngredientsText","SeeNewTab","RecipeComponent","props","useState","show","setShow","recipe","label","image","ingredients","url","Dialog","onClose","console","log","aria-labelledby","open","DialogTitle","DialogContent","map","ingredient","index","className","text","weight","DialogActions","onClick","window","src","alt","Container","RecipeListContainer","Placeholder","App","searchQuery","updateSearchQuery","recipeList","updateRecipeList","timeoutId","updateTimeoutId","fetchData","searchString","a","Axios","get","response","data","hits","placeholder","value","onChange","e","clearTimeout","target","timeout","setTimeout","length","Recipe","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21d7f757.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst AppName = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  background-color: black;\r\n  color: white;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 0px 20px;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  box-shadow: 0 3px 6px 0 #555;\r\n`;\r\n\r\nconst SearchBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 3px 3px;\r\n  border-radius: 6px;\r\n  margin-left: 20px;\r\n  width: 50%;\r\n  background-color: white;\r\n`;\r\n\r\nconst SearchIcon = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n`;\r\n\r\nconst RecipeImage = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n  margin: 15px;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  color: black;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  border: none;\r\n  outline: none;\r\n  margin-left: 15px;\r\n`;\r\n\r\nconst HeaderComponent = {     \r\n    AppName,\r\n    Header,\r\n    RecipeImage,\r\n    SearchBox,\r\n    SearchIcon,\r\n    SearchInput  \r\n}\r\n\r\nexport default HeaderComponent;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nconst RecipeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  width: 300px;\r\n  box-shadow: 0 3px 10px 0 #aaa;\r\n`;\r\n\r\nconst CoverImage = styled.img`\r\n  object-fit: cover;\r\n  height: 200px;\r\n`;\r\n\r\nconst RecipeName = styled.span`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: black;\r\n  margin: 10px 0;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst SeeMoreText = styled.span`\r\n  color: #eb3300;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  border: solid 1px #eb3300;\r\n  border-radius: 3px;\r\n  padding: 10px 15px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst IngredientsText = styled(SeeMoreText)`\r\n  color: green;\r\n  border: solid 1px green;\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nconst SeeNewTab = styled(SeeMoreText)`\r\n  color: green;\r\n  border: solid 1px green;\r\n`;\r\n\r\nconst RecipeComponent = (props) => {\r\nconst [show, setShow] = useState(\"\");\r\n\r\nconst { label, image, ingredients, url } = props.recipe;\r\nreturn (\r\n    <RecipeContainer>\r\n    <Dialog\r\n        onClose={() => console.log(\"adsadad\")}\r\n        aria-labelledby=\"simple-dialog-title\"\r\n        open={!!show}\r\n    >\r\n        <DialogTitle>Ingredients</DialogTitle>\r\n        <DialogContent>\r\n        <RecipeName>{label}</RecipeName>\r\n        <table>\r\n            <thead>\r\n            <th>Ingredient</th>\r\n            <th>Weight</th>\r\n            </thead>\r\n            <tbody>\r\n            {ingredients.map((ingredient, index) => (\r\n                <tr key={index} className=\"ingredient-list\">\r\n                <td>{ingredient.text}</td>\r\n                <td>{ingredient.weight}</td>\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n        </DialogContent>\r\n        <DialogActions>\r\n        <SeeNewTab onClick={() => window.open(url)}>See More</SeeNewTab>\r\n        <SeeMoreText onClick={() => setShow(\"\")}>Close</SeeMoreText>\r\n        </DialogActions>\r\n    </Dialog>\r\n    <CoverImage src={image} alt={label} />\r\n    <RecipeName>{label}</RecipeName>\r\n    <IngredientsText onClick={() => setShow(!show)}>\r\n        Ingredients\r\n    </IngredientsText>\r\n    <SeeMoreText onClick={() => window.open(url)}>\r\n        See Complete Recipe\r\n    </SeeMoreText>\r\n    </RecipeContainer>\r\n);\r\n};\r\n\r\nexport default RecipeComponent;\r\n","import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport styled from \"styled-components\";\nimport HeaderComponent from './components/Header';\nimport RecipeComponent from './components/Recipe';\n\nconst APP_ID = \"a52b4d43\";\nconst APP_KEY = \"e0e5c667605f5e91d8275c973531b80a\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst RecipeListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  padding: 30px;\n  gap: 20px;\n  justify-content: space-evenly;\n`;\n\nconst Placeholder = styled.img`\n  opacity: 50%;\n  width: 90px;\n  height: 90px;\n  margin: 150px;\n`;\n\nconst App = () => {\n  const [searchQuery, updateSearchQuery] = useState(\"\");\n  const [recipeList, updateRecipeList] = useState([]);\n  const [timeoutId, updateTimeoutId] = useState();\n  \n  const fetchData = async (searchString) => {\n    const response = await Axios.get(\n      `https://api.edamam.com/search?q=${searchString}&app_id=${APP_ID}&app_key=${APP_KEY}`,\n    );\n    updateRecipeList(response.data.hits);\n  };\n\n  const onTextChange = (e) => {\n    clearTimeout(timeoutId);\n    updateSearchQuery(e.target.value);\n    const timeout = setTimeout(() => fetchData(e.target.value), 500);\n    updateTimeoutId(timeout);\n  };\n\n  return (\n    <Container>\n      <HeaderComponent.Header>\n        <HeaderComponent.AppName>\n          <HeaderComponent.RecipeImage src=\"/hamburger.svg\" />\n          Recipe Finder\n        </HeaderComponent.AppName>\n        <HeaderComponent.SearchBox>\n          <HeaderComponent.SearchIcon src=\"/search-icon.svg\" />\n          <HeaderComponent.SearchInput\n            placeholder=\"Search Recipe\"\n            value={searchQuery}\n            onChange={onTextChange}\n          />\n        </HeaderComponent.SearchBox>\n      </HeaderComponent.Header>\n      <RecipeListContainer>\n        {recipeList.length ? (\n          recipeList.map((recipe, index) => (\n            <RecipeComponent key={index} recipe={recipe.recipe} />\n          ))\n        ) : (\n          <Placeholder src=\"/hamburger.svg\" />\n        )}\n      </RecipeListContainer>\n    </Container>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}